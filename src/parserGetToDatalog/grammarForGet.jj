/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(ParserForGet)package parserGetToDatalog;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;import java.util.ArrayList;
import database.Database;public class ParserForGet{  private static String getCurrentSchema(String kind)  {
    Database db = new Database();    String currentSchema = db.getLatestSchema(kind);

	return currentSchema;      }

  private static int getCurrentSchemaVersion(String kind)  {	Database db = new Database();
	int currentVersion = db.getLatestSchemaVersion(kind);
	return currentVersion;
  }  private static String getKindRule(String kind)  {
    String value=null;    String schema = getCurrentSchema(kind);
    int currentVersion = getCurrentSchemaVersion(kind);
    
	String[] secondValues = schema.split(",");
    String secondSchema = "";
    for (String s: secondValues)
    {
                secondSchema = secondSchema + s + "2,";
    }
    value = "legacy" + kind + currentVersion + "(?id,?ts):-" + kind + currentVersion + "(?id, " + schema + ", ?ts)," + kind + currentVersion + "(?id, " +
    secondSchema + "?nts), ?ts < ?nts.\u005cn" + "latest" + kind + currentVersion + "(?id,?ts):-" + kind + currentVersion + "(?id, " + schema + ",?ts), not legacy" + kind + currentVersion + "(?id,?ts).\u005cn";
    return value;  }}PARSER_END(ParserForGet)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* Zeichen */{  < marks : "\"" >| < open : "{" >| < end : "}" >| < punkt : ":" >| < string : "\"" (~[ "\"" ])* "\"" >| < number :    (< digit >)+    (      "." (< digit >)+    )? >| < digit : [ "0"-"9" ] >
| < get : "get" >}
String getRule() :
{
  Token kindToken = null;
  Token idToken = null;
}
{
  < get > kindToken = < string > ".\"id\"=" idToken = < string >
  {
    String kind = kindToken.toString();    
    kind = kind.substring(1, kind.length() - 1);
    String id = idToken.toString();
    id = id.substring(1, id.length() - 1);
    String schema = getCurrentSchema(kind);
    int currentVersion = getCurrentSchemaVersion(kind);
    String value = getKindRule(kind);
    
    value = value + "get" + kind + currentVersion + "(?id," + schema + ",?ts):-" + kind + currentVersion + "(?id, " + schema + ", ?ts), latest" + kind + currentVersion +"(?id,?ts),?id="+id+".\n";
 	
    return value;
  }
  < EOF >
}
String get(String kind, int id) :{  String value = null;}{  "get" < EOF >  {    String schema = getCurrentSchema(kind);    value = getKindRule(kind);        value = value + "get" + kind + "(?id," + schema + ",?ts):-" + kind + "(?id, " + schema + ", ?ts), latest" + kind + "(?id,?ts).\n?-get" + kind + "(" + id + ", " + schema + ",?ts).\n"; 	    return value;  }}String getAll(String kind) :{  String value = null;}{  "get" < EOF >  {    String schema = getCurrentSchema(kind);    value = getKindRule(kind);    value = value + "get" + kind + "(?id," + schema + ",?ts):-" + kind + "(?id, " + schema + ", ?ts), latest" + kind + "(?id,?ts).\n?-get" + kind + "(?id, " + schema + ",?ts).\n";    return value;  }}