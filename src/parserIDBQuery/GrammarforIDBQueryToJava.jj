/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(ParserIDBQueryToJava)package parserIDBQuery;import java.util.ArrayList;import bottomUp.Relation;import bottomUp.Query;public class ParserIDBQueryToJava{}PARSER_END(ParserIDBQueryToJava)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* Zeichen */{  < marks : "\"" >| < open : "{" >| < end : "}" >| < punkt : ":" >| < string : "?" < kindValue >>| < number :    (< digit >)+    (      "." (< digit >)+    )? >| < digit : [ "0"-"9" ] >| < kindValue :    < nameValue >    (      < nameValue >    | < digit >    )* >| < nameValue :    [ "a"-"z" ]  | [ "A"-"Z" ]  | "-"  | "_" >}ArrayList < Query > start() :{  ArrayList < Query > querys = new ArrayList < Query > ();  ArrayList < Relation > relations = null;  Relation leftRelation = null;}{  (    leftRelation = getRelation() ":-" relations = getRelationList()    {      querys.add(new Query(leftRelation, relations));    }    "."    (      (        leftRelation = getRelation() ":-" relations = getRelationList()        {          querys.add(new Query(leftRelation, relations));        }        "."      )    )*  )?  < EOF >  {    return querys;  }}ArrayList < Relation > getRelationList() :{  ArrayList < Relation > values = new ArrayList < Relation > ();  Relation relation = null;}{  (    relation = getRelation()    {      values.add(relation);    }    (      ","      (        relation = getRelation()        {          values.add(relation);        }      )    )*  )?  {    return values;  }}Relation getRelation() :{  Token kind = null;  String value = null;  ArrayList < String > values = new ArrayList < String > ();  Relation relation = null;}{  (kind = < kindValue >) "("  (    value = getValue()    {      values.add(value);    }    (      ","      (        value = getValue()        {          values.add(value);        }      )    )*  )?  ")"  {    relation = new Relation(kind.toString(), values.size(), values);    return relation;  }}String getValue() :{  Token valueOfToken = null;}{  (valueOfToken = < string >)  {    return valueOfToken.toString();  }}