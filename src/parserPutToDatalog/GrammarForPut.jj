/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(ParserForPut)package parserPutToDatalog;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;
import database.Database;public class ParserForPut{  private static int zaehler = - 1;  private static int laenge = 0;  private static String [] attributes = null;  private static String ts = null;  private static void getSchema(String kind, int schemaversion)  {    String schema = null;	Database db = new Database();
	schema = db.getSchema(kind,schemaversion);
	    attributes = schema.split(",");    laenge = attributes.length + 1;  }}PARSER_END(ParserForPut)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* Zeichen */{  < marks : "\"" >| < open : "{" >| < end : "}" >| < punkt : ":" >| < string : "'" (~[ "'" ])* "'" >| < number :    (< digit >)+    (      "." (< digit >)+    )? >| < digit : [ "0"-"9" ] >| < kindValue :    < nameValue >    (      < nameValue >    )* >| < nameValue :    [ "a"-"z" ]  | [ "A"-"Z" ]  | "_" >}String start()  :{  String value = null;
  zaehler=-1;}{  value = getJSONString() < EOF >  {    return value;  }}String getJSONString()  :{  Token kind = null;
  Token schemaToken = null;
  String schemaVersion = null;  String value = null;}{  (kind = < kindValue >)
  (schemaToken = < number >)  {
    schemaVersion = schemaToken.toString();    getSchema(kind.toString(), Integer.parseInt(schemaVersion));  }  "("  (    value = listOfValues("")  )?  ")"
    {
	String jsonString = "{\"kind\":\"" + kind + "\",\n" + "\"schemaversion\":" + schemaVersion  + ",\n" + "\"values\":[" + value + "]}";	return jsonString;  }}String listOfValues(String value) :{  Token valueOfToken = null;  String valueOfOtherToken = null;  String valueOne = "";  Boolean isTS = false;}{  (    valueOfToken = < string >  | valueOfToken = < number >  )  {    String name = null;    if (valueOfToken.kind == string)    {      name = valueOfToken.toString();      name = name.substring(1, name.length() - 1);      name = "\"" + name + "\"";    }    else name = "\"" + valueOfToken.toString()+ "\"";//    if (zaehler == (-1))//    {//      zaehler++;//      valueOne = "\"id\":" + name;//    }
    if (zaehler < laenge)    {
      valueOne = name;      //valueOne = "\"" + attributes [ zaehler ].substring(1, attributes [ zaehler ].length()) + "\":" + name;      zaehler++;    }    else if (zaehler == laenge)    {      ts = name;      zaehler++;      isTS = true;    }        else    {      zaehler++;    }  }  (    ","    (      valueOfOtherToken = listOfValues(value)    )  )*  {    if (isTS) return null;    else if (valueOfOtherToken != null) return value + valueOne + ", " + valueOfOtherToken;    else return value + valueOne;  }}