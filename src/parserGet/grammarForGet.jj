/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(ParserForGet)package parserGet;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;import java.util.ArrayList;public class ParserForGet{  private static String getCurrentSchema(String kind)  {    String schema = null;    final File filename = new File("data/" + kind + "Schema");    ArrayList < String > attributelist = new ArrayList < String > ();    if (filename.exists())    {      BufferedReader br = null;      try      {        br = new BufferedReader(new FileReader(filename));
        schema = br.readLine();      }      catch (IOException e)      {        e.printStackTrace();      }      finally      {        try        {          if (br != null) br.close();        }        catch (IOException ex)        {          ex.printStackTrace();        }      }    }    return schema;  }  private static String getKindRule(String kind)  { String value=null;      String schema = getCurrentSchema(kind);      value = "legacy" + kind + "(?id,?ts) :- " +kind + "(?id, " + schema + ", ?ts),"+ kind + "(?id, " + schema.replaceAll("title", "title2").replaceAll("name","name2") + ",?nts), ?ts < ?nts.\n" + "latest" + kind + "(?id,?ts) :- " + kind + "(?id, " + schema + ",?ts), not legacy" + kind + "(?id,?ts).\n";
    return value;  }}PARSER_END(ParserForGet)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* Zeichen */{  < marks : "\"" >| < open : "{" >| < end : "}" >| < punkt : ":" >| < string : "\"" (~[ "\"" ])* "\"" >| < number :    (< digit >)+    (      "." (< digit >)+    )? >| < digit : [ "0"-"9" ] >}String get(String kind, int id) :{  String value = null;}{  "get" < EOF >  {    String schema = getCurrentSchema(kind);    value = getKindRule(kind);
        value = value + "get" + kind + "(?id," + schema + ",?ts) :- " + kind + "(?id, " + schema + ", ?ts), latest" + kind + "(?id,?ts).\n?-get" + kind + "(" + id + ", " + schema + ",?ts).\n";
 	
    return value;  }}String getAll(String kind) :{  String value = null;}{  "get" < EOF >  {
    String schema = getCurrentSchema(kind);    value = getKindRule(kind);
    value = value + "get" + kind + "(?id," + schema + ",?ts) :- " + kind + "(?id, " + schema + ", ?ts), latest" + kind + "(?id,?ts).\n?-get" + kind + "(?id, " + schema + ",?ts).\n";
    return value;  }}