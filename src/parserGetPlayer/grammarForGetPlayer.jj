/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(ParserForGetPlayer)package parserGetPlayer;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;
import java.util.ArrayList;public class ParserForGetPlayer{  private static String schema = null;  private static void setSchema()  {    final File filename = new File("data/schema");    ArrayList < String > attributelist = new ArrayList < String > ();    if (filename.exists())    {      BufferedReader br = null;      try      {        String sCurrentLine;        br = new BufferedReader(new FileReader(filename));        while ((sCurrentLine = br.readLine()) != null)        {          attributelist.add(sCurrentLine);        }      }      catch (IOException e)      {        e.printStackTrace();      }      finally      {        try        {          if (br != null)           br.close();        }        catch (IOException ex)        {          ex.printStackTrace();        }      }    }    schema = "Player(";    for (String attribute : attributelist)     schema = schema + attribute + ",";    schema = schema.substring(0, schema.length() - 1) + ")";  }  private static String getPlayerRule()  {    setSchema();    String value = "legacyPlayer(?id,?ts) :- " + schema + ", " + schema.replaceAll("ts", "nts").replaceAll("name", "name2") + ", ?ts < ?nts.\n" + "latestPlayer(?id,?ts) :- " + schema + ", not legacyPlayer(?id,?ts).\n";    return value;  }}PARSER_END(ParserForGetPlayer)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* Zeichen */{  < marks : "\"" >| < open : "{" >| < end : "}" >| < punkt : ":" >| < string : "\"" (~[ "\"" ])* "\"" >| < number :    (< digit >)+    (      "." (< digit >)+    )? >| < digit : [ "0"-"9" ] >}String getPlayer(int id) :{  String value = null;}{  "get" < EOF >  {    value = getPlayerRule();    value = value + "getPlayer(?id,?name) :- " + schema + ", latestPlayer(?id,?ts).\n?-getPlayer(" + id + ", ?name).\n";    return value;  }}String getAllPlayer() :{  String value = null;}{  "get" < EOF >  {    value = getPlayerRule();    return value;  }}